import{S as M,i as R,s as T,k as i,q as d,a as b,l as p,m as r,r as v,h as e,c as y,n as U,b as c,F as l,D as j}from"./index.40dd77fd.js";function Y(C){let o,I,w,u,x,E,a,f,g,L,h,F,P,_,S,k,n,D=`<code class="language-js"><span class="token comment">// Something to test if syntax is working.</span>
<span class="token keyword">const</span> something <span class="token operator">=</span> <span class="token boolean">false</span></code>`;return{c(){o=i("p"),I=d("Finaly its up. Its been on my mind for a long while to have a place to put my thoughts."),w=b(),u=i("p"),x=d("It will probaby contain thoughts and tips about:"),E=b(),a=i("ul"),f=i("li"),g=d("webdev"),L=b(),h=i("li"),F=d("Azure"),P=b(),_=i("li"),S=d("dotnet"),k=b(),n=i("pre"),this.h()},l(t){o=p(t,"P",{});var s=r(o);I=v(s,"Finaly its up. Its been on my mind for a long while to have a place to put my thoughts."),s.forEach(e),w=y(t),u=p(t,"P",{});var q=r(u);x=v(q,"It will probaby contain thoughts and tips about:"),q.forEach(e),E=y(t),a=p(t,"UL",{});var m=r(a);f=p(m,"LI",{});var z=r(f);g=v(z,"webdev"),z.forEach(e),L=y(m),h=p(m,"LI",{});var A=r(h);F=v(A,"Azure"),A.forEach(e),P=y(m),_=p(m,"LI",{});var W=r(_);S=v(W,"dotnet"),W.forEach(e),m.forEach(e),k=y(t),n=p(t,"PRE",{class:!0});var H=r(n);H.forEach(e),this.h()},h(){U(n,"class","language-js")},m(t,s){c(t,o,s),l(o,I),c(t,w,s),c(t,u,s),l(u,x),c(t,E,s),c(t,a,s),l(a,f),l(f,g),l(a,L),l(a,h),l(h,F),l(a,P),l(a,_),l(_,S),c(t,k,s),c(t,n,s),n.innerHTML=D},p:j,i:j,o:j,d(t){t&&e(o),t&&e(w),t&&e(u),t&&e(E),t&&e(a),t&&e(k),t&&e(n)}}}const G={title:"Welcome to my blog!",description:"You got to start somewhere",date:"2023-04-15",published:!0};class J extends M{constructor(o){super(),R(this,o,null,Y,T,{})}}export{J as default,G as metadata};
