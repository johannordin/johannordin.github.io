import{S as me,i as _e,s as ve,k as i,r as l,a as w,l as r,m as n,u as s,h as o,c as k,p as x,b as d,F as t,n as te}from"./index.013d6d90.js";function Ee(ce){let p,J,h,g,B,b,N,R,y,T,X,H,u,c,U,A,Y,F,C,K,W,z,f,G,O,Q,V,S,m,de='<code class="language-curl">curl -v  -H &quot;Content-Type: application/json&quot;   -H &quot;X-Master-key: &lt;YOUR_API_KEY&gt;&quot;   --request POST   --data &#39;&#123;&quot;sample&quot;: &quot;Hello World&quot;&#125;&#39;     https://api.jsonbin.io/v3/b</code>',M,_,v,Z,I,$,ee,j,E,ue=`<code class="language-c#">.AddHttpClient&lt;IMyHttpClient, MyHttpClient&gt;(options =&gt;
&#123;
    options.BaseAddress = new Uri(&quot;https://api.jsonbin.io/&quot;);
    options.DefaultRequestHeaders.Add(&quot;X-Bin-Meta&quot;, new [] &#123; &quot;false&quot; &#125;);
&#125;);</code>`;return{c(){p=i("p"),J=l("I’ve started using "),h=i("a"),g=l("jsonbin"),B=l(" to mock some simple api calls. I’m impressed with the simplicity and the possibility to validate "),b=i("code"),N=l("bins"),R=l(" to a "),y=i("code"),T=l("JSON schema"),X=l("."),H=w(),u=i("ol"),c=i("li"),U=l("Ask chatgpt to write a example "),A=i("code"),Y=l("JSON"),F=l(" given the "),C=i("code"),K=l("schema"),W=l(" that I provide."),z=w(),f=i("li"),G=l("Add a "),O=i("code"),Q=l("bin"),V=l(" using their rest endpoint"),S=w(),m=i("pre"),M=w(),_=i("ol"),v=i("li"),Z=l("In your ASP.net Core app add the http client and specify "),I=i("code"),$=l("X-Bin-Meta: false"),ee=l(" to skip the extra wrapper."),j=w(),E=i("pre"),this.h()},l(e){p=r(e,"P",{});var a=n(p);J=s(a,"I’ve started using "),h=r(a,"A",{href:!0,rel:!0});var oe=n(h);g=s(oe,"jsonbin"),oe.forEach(o),B=s(a," to mock some simple api calls. I’m impressed with the simplicity and the possibility to validate "),b=r(a,"CODE",{});var ae=n(b);N=s(ae,"bins"),ae.forEach(o),R=s(a," to a "),y=r(a,"CODE",{});var le=n(y);T=s(le,"JSON schema"),le.forEach(o),X=s(a,"."),a.forEach(o),H=k(e),u=r(e,"OL",{});var D=n(u);c=r(D,"LI",{});var q=n(c);U=s(q,"Ask chatgpt to write a example "),A=r(q,"CODE",{});var se=n(A);Y=s(se,"JSON"),se.forEach(o),F=s(q," given the "),C=r(q,"CODE",{});var ie=n(C);K=s(ie,"schema"),ie.forEach(o),W=s(q," that I provide."),q.forEach(o),z=k(D),f=r(D,"LI",{});var L=n(f);G=s(L,"Add a "),O=r(L,"CODE",{});var re=n(O);Q=s(re,"bin"),re.forEach(o),V=s(L," using their rest endpoint"),L.forEach(o),D.forEach(o),S=k(e),m=r(e,"PRE",{class:!0});var he=n(m);he.forEach(o),M=k(e),_=r(e,"OL",{start:!0});var ne=n(_);v=r(ne,"LI",{});var P=n(v);Z=s(P,"In your ASP.net Core app add the http client and specify "),I=r(P,"CODE",{});var pe=n(I);$=s(pe,"X-Bin-Meta: false"),pe.forEach(o),ee=s(P," to skip the extra wrapper."),P.forEach(o),ne.forEach(o),j=k(e),E=r(e,"PRE",{class:!0});var fe=n(E);fe.forEach(o),this.h()},h(){x(h,"href","https://jsonbin.io"),x(h,"rel","nofollow"),x(m,"class","language-curl"),x(_,"start","3"),x(E,"class","language-c#")},m(e,a){d(e,p,a),t(p,J),t(p,h),t(h,g),t(p,B),t(p,b),t(b,N),t(p,R),t(p,y),t(y,T),t(p,X),d(e,H,a),d(e,u,a),t(u,c),t(c,U),t(c,A),t(A,Y),t(c,F),t(c,C),t(C,K),t(c,W),t(u,z),t(u,f),t(f,G),t(f,O),t(O,Q),t(f,V),d(e,S,a),d(e,m,a),m.innerHTML=de,d(e,M,a),d(e,_,a),t(_,v),t(v,Z),t(v,I),t(I,$),t(v,ee),d(e,j,a),d(e,E,a),E.innerHTML=ue},p:te,i:te,o:te,d(e){e&&o(p),e&&o(H),e&&o(u),e&&o(S),e&&o(m),e&&o(M),e&&o(_),e&&o(j),e&&o(E)}}}const be={title:"Jsonbin.io and Asp.net Core",description:"A simple way to mock your dependencies",date:"2023-04-21",published:!0};class ye extends me{constructor(p){super(),_e(this,p,null,Ee,ve,{})}}export{ye as default,be as metadata};
